// This file is subject to the terms and conditions defined in
// file 'LICENSE.txt', which is part of this source code package.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v3.20.3
// source: receptor_v1/receptor.proto

package receptor_v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// EvidenceObjectType enum to identify the type of evidence object reported to Trustero.
type EvidenceObjectType int32

const (
	EvidenceObjectType_EVIDENCES                          EvidenceObjectType = 0
	EvidenceObjectType_CONTROLS                           EvidenceObjectType = 1
	EvidenceObjectType_POLICIES                           EvidenceObjectType = 2
	EvidenceObjectType_POLICY_DOCUMENT                    EvidenceObjectType = 3
	EvidenceObjectType_CONTROL_POLICY_MAPPING             EvidenceObjectType = 4
	EvidenceObjectType_CONTROL_PROCEDURES                 EvidenceObjectType = 5
	EvidenceObjectType_CONTROL_CONTROL_PROCEDURE_MAPPING  EvidenceObjectType = 6
	EvidenceObjectType_CONTROL_EVIDENCE_MAPPING           EvidenceObjectType = 7
	EvidenceObjectType_EVIDENCES_META                     EvidenceObjectType = 8
	EvidenceObjectType_POLICY_DOCUMENT_POLICY_MAPPING     EvidenceObjectType = 9
	EvidenceObjectType_POLICY_DOCUMENT_META               EvidenceObjectType = 10
	EvidenceObjectType_CONTROL_PROCEDURE_EVIDENCE_MAPPING EvidenceObjectType = 11
	EvidenceObjectType_WORKFLOW_TASK_EVIDENCE_MAPPING     EvidenceObjectType = 12
)

// Enum value maps for EvidenceObjectType.
var (
	EvidenceObjectType_name = map[int32]string{
		0:  "EVIDENCES",
		1:  "CONTROLS",
		2:  "POLICIES",
		3:  "POLICY_DOCUMENT",
		4:  "CONTROL_POLICY_MAPPING",
		5:  "CONTROL_PROCEDURES",
		6:  "CONTROL_CONTROL_PROCEDURE_MAPPING",
		7:  "CONTROL_EVIDENCE_MAPPING",
		8:  "EVIDENCES_META",
		9:  "POLICY_DOCUMENT_POLICY_MAPPING",
		10: "POLICY_DOCUMENT_META",
		11: "CONTROL_PROCEDURE_EVIDENCE_MAPPING",
		12: "WORKFLOW_TASK_EVIDENCE_MAPPING",
	}
	EvidenceObjectType_value = map[string]int32{
		"EVIDENCES":                          0,
		"CONTROLS":                           1,
		"POLICIES":                           2,
		"POLICY_DOCUMENT":                    3,
		"CONTROL_POLICY_MAPPING":             4,
		"CONTROL_PROCEDURES":                 5,
		"CONTROL_CONTROL_PROCEDURE_MAPPING":  6,
		"CONTROL_EVIDENCE_MAPPING":           7,
		"EVIDENCES_META":                     8,
		"POLICY_DOCUMENT_POLICY_MAPPING":     9,
		"POLICY_DOCUMENT_META":               10,
		"CONTROL_PROCEDURE_EVIDENCE_MAPPING": 11,
		"WORKFLOW_TASK_EVIDENCE_MAPPING":     12,
	}
)

func (x EvidenceObjectType) Enum() *EvidenceObjectType {
	p := new(EvidenceObjectType)
	*p = x
	return p
}

func (x EvidenceObjectType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EvidenceObjectType) Descriptor() protoreflect.EnumDescriptor {
	return file_receptor_v1_receptor_proto_enumTypes[0].Descriptor()
}

func (EvidenceObjectType) Type() protoreflect.EnumType {
	return &file_receptor_v1_receptor_proto_enumTypes[0]
}

func (x EvidenceObjectType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EvidenceObjectType.Descriptor instead.
func (EvidenceObjectType) EnumDescriptor() ([]byte, []int) {
	return file_receptor_v1_receptor_proto_rawDescGZIP(), []int{0}
}

// Finding is a set of evidence(s) collected from a service provider account.
type Finding struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique receptor identifier.  A receptor is expected to report findings from only one service provider type.  A
	// stable identifier that represent the type of receptor reporting this finding.  The identifier is a simple URL
	// encoded string that includes an organization name and the service provider name.  For example: "trustero_gitlab".
	ReceptorType string `protobuf:"bytes,1,opt,name=receptor_type,json=receptorType,proto3" json:"receptor_type,omitempty"`
	// The receptor's evidence source.
	ServiceProviderAccount string `protobuf:"bytes,2,opt,name=service_provider_account,json=serviceProviderAccount,proto3" json:"service_provider_account,omitempty"`
	// Entities is a list of service entity configurations in the service provider account.
	Entities []*ServiceEntity `protobuf:"bytes,3,rep,name=entities,proto3" json:"entities,omitempty"`
	// One or more evidence collected by a typical receptor scan.
	Evidences     []*Evidence `protobuf:"bytes,4,rep,name=evidences,proto3" json:"evidences,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Finding) Reset() {
	*x = Finding{}
	mi := &file_receptor_v1_receptor_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Finding) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Finding) ProtoMessage() {}

func (x *Finding) ProtoReflect() protoreflect.Message {
	mi := &file_receptor_v1_receptor_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Finding.ProtoReflect.Descriptor instead.
func (*Finding) Descriptor() ([]byte, []int) {
	return file_receptor_v1_receptor_proto_rawDescGZIP(), []int{0}
}

func (x *Finding) GetReceptorType() string {
	if x != nil {
		return x.ReceptorType
	}
	return ""
}

func (x *Finding) GetServiceProviderAccount() string {
	if x != nil {
		return x.ServiceProviderAccount
	}
	return ""
}

func (x *Finding) GetEntities() []*ServiceEntity {
	if x != nil {
		return x.Entities
	}
	return nil
}

func (x *Finding) GetEvidences() []*Evidence {
	if x != nil {
		return x.Evidences
	}
	return nil
}

// Evidence is a unstructured or structured document that represent the how a service is being used within a
// service provider account.  For example, the configuration of an S3 bucket in AWS.
type Evidence struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Caption is a human readable English string that identifies this evidence.  Caption must be stable for
	// all scans of the same evidence type.  Trustero uses the caption to associate this evidence with a
	// set of relevant controls.
	Caption string `protobuf:"bytes,1,opt,name=caption,proto3" json:"caption,omitempty"`
	// Description is a human readable English string describing the content of this evidence.  Description
	// tells Trustero and users contents of the evidence and how
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// Service_name is the name of service this evidence was collected from.  For example, "S3" or "GitLab"
	ServiceName string `protobuf:"bytes,3,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	// Entity_type specifies the row type and should correspond to a ServiceEntity.  An entity_type typically
	// represents a specific configurable entity such as AWS ECS "Cluster".
	EntityType string `protobuf:"bytes,4,opt,name=entity_type,json=entityType,proto3" json:"entity_type,omitempty"`
	// Sources are raw service provider API requests and responses used to generate this evidence.  The raw API requests
	// and responses serve as proof the evidence correlates to real service configurations.
	Sources []*Source `protobuf:"bytes,5,rep,name=sources,proto3" json:"sources,omitempty"`
	// Evidence_type can be either an unstructured (Document) or structured (Struct) type.
	//
	// Types that are valid to be assigned to EvidenceType:
	//
	//	*Evidence_Doc
	//	*Evidence_Struct
	EvidenceType isEvidence_EvidenceType `protobuf_oneof:"evidence_type"`
	// Service_account_id is the member account of the organization. For example, an AWS account number in an organization
	// that has more than one account.
	ServiceAccountId string `protobuf:"bytes,8,opt,name=service_account_id,json=serviceAccountId,proto3" json:"service_account_id,omitempty"`
	// Controls is a list of control names that the evidence is associated with.
	Controls []string `protobuf:"bytes,9,rep,name=controls,proto3" json:"controls,omitempty"`
	// is_manual is a boolean that indicates whether the evidence was manually collected or not.
	IsManual bool `protobuf:"varint,10,opt,name=is_manual,json=isManual,proto3" json:"is_manual,omitempty"`
	// relevant_date is the date the evidence was collected.
	RelevantDate *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=relevant_date,json=relevantDate,proto3" json:"relevant_date,omitempty"`
	// evidence_object_type is an enum of  EvidenceObjectType. For example, "evidences", "controls", "policies", "policy_document".
	EvidenceObjectType EvidenceObjectType `protobuf:"varint,12,opt,name=evidence_object_type,json=evidenceObjectType,proto3,enum=receptor_v1.EvidenceObjectType" json:"evidence_object_type,omitempty"`
	// evidence_key is a unique key for the evidence object. This key is used to identify the evidence object in the external system.
	EvidenceKey string `protobuf:"bytes,13,opt,name=evidence_key,json=evidenceKey,proto3" json:"evidence_key,omitempty"`
	// Policies is a list of policies names that the document is associated with.
	Policies []string `protobuf:"bytes,14,rep,name=policies,proto3" json:"policies,omitempty"`
	// a list of record_id for the evidence object. This ID is used to identify the evidence object in the Trustero system.
	RecordIds []string `protobuf:"bytes,15,rep,name=record_ids,json=recordIds,proto3" json:"record_ids,omitempty"`
	// exceptions is a list of exceptions for the evidence object.
	Exceptions string `protobuf:"bytes,16,opt,name=exceptions,proto3" json:"exceptions,omitempty"`
	// // link to the evidence object in the external system.
	EvidenceLink  string `protobuf:"bytes,17,opt,name=evidence_link,json=evidenceLink,proto3" json:"evidence_link,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Evidence) Reset() {
	*x = Evidence{}
	mi := &file_receptor_v1_receptor_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Evidence) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Evidence) ProtoMessage() {}

func (x *Evidence) ProtoReflect() protoreflect.Message {
	mi := &file_receptor_v1_receptor_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Evidence.ProtoReflect.Descriptor instead.
func (*Evidence) Descriptor() ([]byte, []int) {
	return file_receptor_v1_receptor_proto_rawDescGZIP(), []int{1}
}

func (x *Evidence) GetCaption() string {
	if x != nil {
		return x.Caption
	}
	return ""
}

func (x *Evidence) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Evidence) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *Evidence) GetEntityType() string {
	if x != nil {
		return x.EntityType
	}
	return ""
}

func (x *Evidence) GetSources() []*Source {
	if x != nil {
		return x.Sources
	}
	return nil
}

func (x *Evidence) GetEvidenceType() isEvidence_EvidenceType {
	if x != nil {
		return x.EvidenceType
	}
	return nil
}

func (x *Evidence) GetDoc() *Document {
	if x != nil {
		if x, ok := x.EvidenceType.(*Evidence_Doc); ok {
			return x.Doc
		}
	}
	return nil
}

func (x *Evidence) GetStruct() *Struct {
	if x != nil {
		if x, ok := x.EvidenceType.(*Evidence_Struct); ok {
			return x.Struct
		}
	}
	return nil
}

func (x *Evidence) GetServiceAccountId() string {
	if x != nil {
		return x.ServiceAccountId
	}
	return ""
}

func (x *Evidence) GetControls() []string {
	if x != nil {
		return x.Controls
	}
	return nil
}

func (x *Evidence) GetIsManual() bool {
	if x != nil {
		return x.IsManual
	}
	return false
}

func (x *Evidence) GetRelevantDate() *timestamppb.Timestamp {
	if x != nil {
		return x.RelevantDate
	}
	return nil
}

func (x *Evidence) GetEvidenceObjectType() EvidenceObjectType {
	if x != nil {
		return x.EvidenceObjectType
	}
	return EvidenceObjectType_EVIDENCES
}

func (x *Evidence) GetEvidenceKey() string {
	if x != nil {
		return x.EvidenceKey
	}
	return ""
}

func (x *Evidence) GetPolicies() []string {
	if x != nil {
		return x.Policies
	}
	return nil
}

func (x *Evidence) GetRecordIds() []string {
	if x != nil {
		return x.RecordIds
	}
	return nil
}

func (x *Evidence) GetExceptions() string {
	if x != nil {
		return x.Exceptions
	}
	return ""
}

func (x *Evidence) GetEvidenceLink() string {
	if x != nil {
		return x.EvidenceLink
	}
	return ""
}

type isEvidence_EvidenceType interface {
	isEvidence_EvidenceType()
}

type Evidence_Doc struct {
	// Document is an unstructured evidence.
	Doc *Document `protobuf:"bytes,6,opt,name=doc,proto3,oneof"`
}

type Evidence_Struct struct {
	// Struct is a structured evidence.
	Struct *Struct `protobuf:"bytes,7,opt,name=struct,proto3,oneof"`
}

func (*Evidence_Doc) isEvidence_EvidenceType() {}

func (*Evidence_Struct) isEvidence_EvidenceType() {}

// Source is the raw service provider API request and response.
type Source struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Raw_api_request is the raw API request used to generate this evidence.
	RawApiRequest string `protobuf:"bytes,1,opt,name=raw_api_request,json=rawApiRequest,proto3" json:"raw_api_request,omitempty"`
	// Raw_api_response is the raw API response used to generate this evidence.
	RawApiResponse string `protobuf:"bytes,2,opt,name=raw_api_response,json=rawApiResponse,proto3" json:"raw_api_response,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Source) Reset() {
	*x = Source{}
	mi := &file_receptor_v1_receptor_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Source) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Source) ProtoMessage() {}

func (x *Source) ProtoReflect() protoreflect.Message {
	mi := &file_receptor_v1_receptor_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Source.ProtoReflect.Descriptor instead.
func (*Source) Descriptor() ([]byte, []int) {
	return file_receptor_v1_receptor_proto_rawDescGZIP(), []int{2}
}

func (x *Source) GetRawApiRequest() string {
	if x != nil {
		return x.RawApiRequest
	}
	return ""
}

func (x *Source) GetRawApiResponse() string {
	if x != nil {
		return x.RawApiResponse
	}
	return ""
}

type Sources struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Sources       []*Source              `protobuf:"bytes,1,rep,name=sources,proto3" json:"sources,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Sources) Reset() {
	*x = Sources{}
	mi := &file_receptor_v1_receptor_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Sources) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sources) ProtoMessage() {}

func (x *Sources) ProtoReflect() protoreflect.Message {
	mi := &file_receptor_v1_receptor_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sources.ProtoReflect.Descriptor instead.
func (*Sources) Descriptor() ([]byte, []int) {
	return file_receptor_v1_receptor_proto_rawDescGZIP(), []int{3}
}

func (x *Sources) GetSources() []*Source {
	if x != nil {
		return x.Sources
	}
	return nil
}

// Document is an unstructured evidence provided as a MIME document.
type Document struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Mime is the document type defined using [MIME].
	// [MIME]: https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types
	Mime string `protobuf:"bytes,2,opt,name=mime,proto3" json:"mime,omitempty"`
	// Body is the opaque document body.  The document body must match the type defined by the mime attribute.
	Body []byte `protobuf:"bytes,3,opt,name=body,proto3" json:"body,omitempty"`
	// Filepath for streaming large evidence - should be accessible by the server.
	StreamFilePath string `protobuf:"bytes,4,opt,name=stream_file_path,json=streamFilePath,proto3" json:"stream_file_path,omitempty"`
	// Filename is the name of the document
	FileName string `protobuf:"bytes,5,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	// Last modified date of the document at the source
	LastModified  *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=last_modified,json=lastModified,proto3" json:"last_modified,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Document) Reset() {
	*x = Document{}
	mi := &file_receptor_v1_receptor_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Document) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Document) ProtoMessage() {}

func (x *Document) ProtoReflect() protoreflect.Message {
	mi := &file_receptor_v1_receptor_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Document.ProtoReflect.Descriptor instead.
func (*Document) Descriptor() ([]byte, []int) {
	return file_receptor_v1_receptor_proto_rawDescGZIP(), []int{4}
}

func (x *Document) GetMime() string {
	if x != nil {
		return x.Mime
	}
	return ""
}

func (x *Document) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *Document) GetStreamFilePath() string {
	if x != nil {
		return x.StreamFilePath
	}
	return ""
}

func (x *Document) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *Document) GetLastModified() *timestamppb.Timestamp {
	if x != nil {
		return x.LastModified
	}
	return nil
}

// Struct is a structured evidence defined in tabular form.  Each struct typically represent a service type (see
// Evidence message definition).  Each struct consists of rows of data.  Each row typically represent a service
// instance and its configurations.  A row  contains column name and column value pairs.  All rows in a struct
// must have the same column name-value pairs.
type Struct struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Rows of key-value pairs.  Each row typically represents the configuration of a service instance or an data
	// type such as a member of GitLab group.
	Rows []*Row `protobuf:"bytes,2,rep,name=rows,proto3" json:"rows,omitempty"`
	// Col_display_names is a map of row column name to it's corresponding display name.  Display names are used
	// by the user interface to render a field in a struct's rows.
	ColDisplayNames map[string]string `protobuf:"bytes,3,rep,name=col_display_names,json=colDisplayNames,proto3" json:"col_display_names,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Col_display_order is an ordered list of row column names.  The order of the column names are used by the user
	// interface to render the column order of a struct's rows.
	ColDisplayOrder []string `protobuf:"bytes,4,rep,name=col_display_order,json=colDisplayOrder,proto3" json:"col_display_order,omitempty"`
	// Col_tags is a map of column tag to row column name. These tags are used by Trustero's evidence testing interface
	// to identify relevant evidence.
	ColTags       map[string]string `protobuf:"bytes,5,rep,name=col_tags,json=colTags,proto3" json:"col_tags,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Struct) Reset() {
	*x = Struct{}
	mi := &file_receptor_v1_receptor_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Struct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Struct) ProtoMessage() {}

func (x *Struct) ProtoReflect() protoreflect.Message {
	mi := &file_receptor_v1_receptor_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Struct.ProtoReflect.Descriptor instead.
func (*Struct) Descriptor() ([]byte, []int) {
	return file_receptor_v1_receptor_proto_rawDescGZIP(), []int{5}
}

func (x *Struct) GetRows() []*Row {
	if x != nil {
		return x.Rows
	}
	return nil
}

func (x *Struct) GetColDisplayNames() map[string]string {
	if x != nil {
		return x.ColDisplayNames
	}
	return nil
}

func (x *Struct) GetColDisplayOrder() []string {
	if x != nil {
		return x.ColDisplayOrder
	}
	return nil
}

func (x *Struct) GetColTags() map[string]string {
	if x != nil {
		return x.ColTags
	}
	return nil
}

// Row is a row of structured data.
type Row struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Entity_instance_id of a discovered entity instance.  For example, an AWS "ECS" cluster UUID or GitLab
	// "repository" ID.
	EntityInstanceId string `protobuf:"bytes,1,opt,name=entity_instance_id,json=entityInstanceId,proto3" json:"entity_instance_id,omitempty"`
	// Cols are columns of the row in column name to value pairs.  All rows in a struct must have the same column
	// names and corresponding value types.  In addition, one of the key-value pair in the cols map must be the
	// entity_instance_id, a unique instance of this row's Struct.entity_type.
	Cols          map[string]*Value `protobuf:"bytes,2,rep,name=cols,proto3" json:"cols,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Row) Reset() {
	*x = Row{}
	mi := &file_receptor_v1_receptor_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Row) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Row) ProtoMessage() {}

func (x *Row) ProtoReflect() protoreflect.Message {
	mi := &file_receptor_v1_receptor_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Row.ProtoReflect.Descriptor instead.
func (*Row) Descriptor() ([]byte, []int) {
	return file_receptor_v1_receptor_proto_rawDescGZIP(), []int{6}
}

func (x *Row) GetEntityInstanceId() string {
	if x != nil {
		return x.EntityInstanceId
	}
	return ""
}

func (x *Row) GetCols() map[string]*Value {
	if x != nil {
		return x.Cols
	}
	return nil
}

// Value is a [Struct.row.col] column value.  Value types can be simple protobuf scalar or [google.proto.Timestamp].
type Value struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to ValueType:
	//
	//	*Value_DoubleValue
	//	*Value_FloatValue
	//	*Value_Int32Value
	//	*Value_Int64Value
	//	*Value_Uint32Value
	//	*Value_Uint64Value
	//	*Value_BoolValue
	//	*Value_StringValue
	//	*Value_TimestampValue
	//	*Value_StringListValue
	//	*Value_StructListValue
	ValueType     isValue_ValueType `protobuf_oneof:"value_type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Value) Reset() {
	*x = Value{}
	mi := &file_receptor_v1_receptor_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Value) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Value) ProtoMessage() {}

func (x *Value) ProtoReflect() protoreflect.Message {
	mi := &file_receptor_v1_receptor_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Value.ProtoReflect.Descriptor instead.
func (*Value) Descriptor() ([]byte, []int) {
	return file_receptor_v1_receptor_proto_rawDescGZIP(), []int{7}
}

func (x *Value) GetValueType() isValue_ValueType {
	if x != nil {
		return x.ValueType
	}
	return nil
}

func (x *Value) GetDoubleValue() float64 {
	if x != nil {
		if x, ok := x.ValueType.(*Value_DoubleValue); ok {
			return x.DoubleValue
		}
	}
	return 0
}

func (x *Value) GetFloatValue() float32 {
	if x != nil {
		if x, ok := x.ValueType.(*Value_FloatValue); ok {
			return x.FloatValue
		}
	}
	return 0
}

func (x *Value) GetInt32Value() int32 {
	if x != nil {
		if x, ok := x.ValueType.(*Value_Int32Value); ok {
			return x.Int32Value
		}
	}
	return 0
}

func (x *Value) GetInt64Value() int64 {
	if x != nil {
		if x, ok := x.ValueType.(*Value_Int64Value); ok {
			return x.Int64Value
		}
	}
	return 0
}

func (x *Value) GetUint32Value() uint32 {
	if x != nil {
		if x, ok := x.ValueType.(*Value_Uint32Value); ok {
			return x.Uint32Value
		}
	}
	return 0
}

func (x *Value) GetUint64Value() uint64 {
	if x != nil {
		if x, ok := x.ValueType.(*Value_Uint64Value); ok {
			return x.Uint64Value
		}
	}
	return 0
}

func (x *Value) GetBoolValue() bool {
	if x != nil {
		if x, ok := x.ValueType.(*Value_BoolValue); ok {
			return x.BoolValue
		}
	}
	return false
}

func (x *Value) GetStringValue() string {
	if x != nil {
		if x, ok := x.ValueType.(*Value_StringValue); ok {
			return x.StringValue
		}
	}
	return ""
}

func (x *Value) GetTimestampValue() *timestamppb.Timestamp {
	if x != nil {
		if x, ok := x.ValueType.(*Value_TimestampValue); ok {
			return x.TimestampValue
		}
	}
	return nil
}

func (x *Value) GetStringListValue() *StringList {
	if x != nil {
		if x, ok := x.ValueType.(*Value_StringListValue); ok {
			return x.StringListValue
		}
	}
	return nil
}

func (x *Value) GetStructListValue() *StructList {
	if x != nil {
		if x, ok := x.ValueType.(*Value_StructListValue); ok {
			return x.StructListValue
		}
	}
	return nil
}

type isValue_ValueType interface {
	isValue_ValueType()
}

type Value_DoubleValue struct {
	DoubleValue float64 `protobuf:"fixed64,1,opt,name=double_value,json=doubleValue,proto3,oneof"`
}

type Value_FloatValue struct {
	FloatValue float32 `protobuf:"fixed32,2,opt,name=float_value,json=floatValue,proto3,oneof"`
}

type Value_Int32Value struct {
	Int32Value int32 `protobuf:"varint,3,opt,name=int32_value,json=int32Value,proto3,oneof"`
}

type Value_Int64Value struct {
	Int64Value int64 `protobuf:"varint,4,opt,name=int64_value,json=int64Value,proto3,oneof"`
}

type Value_Uint32Value struct {
	Uint32Value uint32 `protobuf:"varint,5,opt,name=uint32_value,json=uint32Value,proto3,oneof"`
}

type Value_Uint64Value struct {
	Uint64Value uint64 `protobuf:"varint,6,opt,name=uint64_value,json=uint64Value,proto3,oneof"`
}

type Value_BoolValue struct {
	BoolValue bool `protobuf:"varint,7,opt,name=bool_value,json=boolValue,proto3,oneof"`
}

type Value_StringValue struct {
	StringValue string `protobuf:"bytes,8,opt,name=string_value,json=stringValue,proto3,oneof"`
}

type Value_TimestampValue struct {
	TimestampValue *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=timestamp_value,json=timestampValue,proto3,oneof"`
}

type Value_StringListValue struct {
	StringListValue *StringList `protobuf:"bytes,10,opt,name=string_list_value,json=stringListValue,proto3,oneof"`
}

type Value_StructListValue struct {
	StructListValue *StructList `protobuf:"bytes,11,opt,name=struct_list_value,json=structListValue,proto3,oneof"`
}

func (*Value_DoubleValue) isValue_ValueType() {}

func (*Value_FloatValue) isValue_ValueType() {}

func (*Value_Int32Value) isValue_ValueType() {}

func (*Value_Int64Value) isValue_ValueType() {}

func (*Value_Uint32Value) isValue_ValueType() {}

func (*Value_Uint64Value) isValue_ValueType() {}

func (*Value_BoolValue) isValue_ValueType() {}

func (*Value_StringValue) isValue_ValueType() {}

func (*Value_TimestampValue) isValue_ValueType() {}

func (*Value_StringListValue) isValue_ValueType() {}

func (*Value_StructListValue) isValue_ValueType() {}

type StringList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Values        []string               `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StringList) Reset() {
	*x = StringList{}
	mi := &file_receptor_v1_receptor_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StringList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringList) ProtoMessage() {}

func (x *StringList) ProtoReflect() protoreflect.Message {
	mi := &file_receptor_v1_receptor_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StringList.ProtoReflect.Descriptor instead.
func (*StringList) Descriptor() ([]byte, []int) {
	return file_receptor_v1_receptor_proto_rawDescGZIP(), []int{8}
}

func (x *StringList) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

type StructList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Values        []*StructStruct        `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"` // Array of structs
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StructList) Reset() {
	*x = StructList{}
	mi := &file_receptor_v1_receptor_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StructList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StructList) ProtoMessage() {}

func (x *StructList) ProtoReflect() protoreflect.Message {
	mi := &file_receptor_v1_receptor_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StructList.ProtoReflect.Descriptor instead.
func (*StructList) Descriptor() ([]byte, []int) {
	return file_receptor_v1_receptor_proto_rawDescGZIP(), []int{9}
}

func (x *StructList) GetValues() []*StructStruct {
	if x != nil {
		return x.Values
	}
	return nil
}

type StructStruct struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Fields        map[string]*Value      `protobuf:"bytes,1,rep,name=fields,proto3" json:"fields,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Fields of the struct
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StructStruct) Reset() {
	*x = StructStruct{}
	mi := &file_receptor_v1_receptor_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StructStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StructStruct) ProtoMessage() {}

func (x *StructStruct) ProtoReflect() protoreflect.Message {
	mi := &file_receptor_v1_receptor_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StructStruct.ProtoReflect.Descriptor instead.
func (*StructStruct) Descriptor() ([]byte, []int) {
	return file_receptor_v1_receptor_proto_rawDescGZIP(), []int{10}
}

func (x *StructStruct) GetFields() map[string]*Value {
	if x != nil {
		return x.Fields
	}
	return nil
}

// ServiceEntities are configurable entities within a service provider account.  For example, service entities in
// an AWS account include S3 buckets, ECS clusters, RDS database instances, etc.  The boundary of a service entity
// depends on how a receptor represents it's findings.  Each service instance_id should be associated with at least
// one Evidence.
type ServiceEntities struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Receptor_type is a unique receptor type.  A stable string identifier that represent the type of receptor
	// reporting this finding.  The identifier is a simple URL encode string that includes the organization name
	// and a service provider name.  For example "trustero_gitlab".
	ReceptorType string `protobuf:"bytes,1,opt,name=receptor_type,json=receptorType,proto3" json:"receptor_type,omitempty"`
	// Service_provider_account is the service provider account where the services are configured in.
	ServiceProviderAccount string `protobuf:"bytes,2,opt,name=service_provider_account,json=serviceProviderAccount,proto3" json:"service_provider_account,omitempty"`
	// Entities is a list of service instances configured in the service provider account.
	Entities      []*ServiceEntity `protobuf:"bytes,3,rep,name=entities,proto3" json:"entities,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServiceEntities) Reset() {
	*x = ServiceEntities{}
	mi := &file_receptor_v1_receptor_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServiceEntities) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceEntities) ProtoMessage() {}

func (x *ServiceEntities) ProtoReflect() protoreflect.Message {
	mi := &file_receptor_v1_receptor_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceEntities.ProtoReflect.Descriptor instead.
func (*ServiceEntities) Descriptor() ([]byte, []int) {
	return file_receptor_v1_receptor_proto_rawDescGZIP(), []int{11}
}

func (x *ServiceEntities) GetReceptorType() string {
	if x != nil {
		return x.ReceptorType
	}
	return ""
}

func (x *ServiceEntities) GetServiceProviderAccount() string {
	if x != nil {
		return x.ServiceProviderAccount
	}
	return ""
}

func (x *ServiceEntities) GetEntities() []*ServiceEntity {
	if x != nil {
		return x.Entities
	}
	return nil
}

// ServiceEntity is a discovered service entity instance which represents a configurable entity provided by the
// service.  For example, an AWS ECS cluster or a GitLab repository.  These service entities are associated with
// detailed configurations collected by Receptor.Reported() calls.  Service entities allows Trustero to filter
// collected evidence that aren't relevant to specific audit contexts.
type ServiceEntity struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Service_name of the entity source.  This is a Trustero assigned identifier for a known service such as
	// "GitLab" or AWS "ECS".
	ServiceName string `protobuf:"bytes,1,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	// Entity_type is a service configurable object type such as a GitLab "repository" or AWS ECS "cluster".  The
	// entity_instance_name and entity_instance_id must represent an instance of the subtype.  For example,
	// "Java 1.5" maybe a valid GitLab repository name or "Elastic front end cluster" maybe a valid AWS ECS
	// cluster name.
	EntityType string `protobuf:"bytes,2,opt,name=entity_type,json=entityType,proto3" json:"entity_type,omitempty"`
	// Entity_instance_name of a discovered service entity instance.  For example, an AWS ECS cluster name or a
	// GitLab repository name.  Entity_instance_name of an entity may change for a given entity instance but
	// it's entity_instance_id is stable.
	EntityInstanceName string `protobuf:"bytes,3,opt,name=entity_instance_name,json=entityInstanceName,proto3" json:"entity_instance_name,omitempty"`
	// Entity_instance_id of a discovered entity instance.  For example, an AWS ECS cluster UUID or GitLab
	// repository ID.
	EntityInstanceId string `protobuf:"bytes,4,opt,name=entity_instance_id,json=entityInstanceId,proto3" json:"entity_instance_id,omitempty"`
	// Service_account_id is the member account of the organization. For example, an AWS account number in a an organization
	// that has more than one account.
	ServiceAccountId string `protobuf:"bytes,5,opt,name=service_account_id,json=serviceAccountId,proto3" json:"service_account_id,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ServiceEntity) Reset() {
	*x = ServiceEntity{}
	mi := &file_receptor_v1_receptor_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServiceEntity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceEntity) ProtoMessage() {}

func (x *ServiceEntity) ProtoReflect() protoreflect.Message {
	mi := &file_receptor_v1_receptor_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceEntity.ProtoReflect.Descriptor instead.
func (*ServiceEntity) Descriptor() ([]byte, []int) {
	return file_receptor_v1_receptor_proto_rawDescGZIP(), []int{12}
}

func (x *ServiceEntity) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *ServiceEntity) GetEntityType() string {
	if x != nil {
		return x.EntityType
	}
	return ""
}

func (x *ServiceEntity) GetEntityInstanceName() string {
	if x != nil {
		return x.EntityInstanceName
	}
	return ""
}

func (x *ServiceEntity) GetEntityInstanceId() string {
	if x != nil {
		return x.EntityInstanceId
	}
	return ""
}

func (x *ServiceEntity) GetServiceAccountId() string {
	if x != nil {
		return x.ServiceAccountId
	}
	return ""
}

// Credential is returned by a Verified request noting if a given service provider account credential is  valid.
type Credential struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Receptor_object_id is Trustero's receptor record identifier.  This identifier is typically provided to the
	// receptor as part of a reporting findings or discover services request.
	ReceptorObjectId string `protobuf:"bytes,1,opt,name=receptor_object_id,json=receptorObjectId,proto3" json:"receptor_object_id,omitempty"`
	// Credential is the service provider credential being verified.
	Credential string `protobuf:"bytes,2,opt,name=credential,proto3" json:"credential,omitempty"`
	// Is_credential_valid report whether the service provider credential provided to the receptor verify request
	// is valid.
	IsCredentialValid bool `protobuf:"varint,3,opt,name=is_credential_valid,json=isCredentialValid,proto3" json:"is_credential_valid,omitempty"`
	// Message contains the reason for why the service provider credential in this message is invalid.
	Message string `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	// Exceptions contains information about the permissions that are missing for the credentials provided.
	Exceptions    string `protobuf:"bytes,5,opt,name=exceptions,proto3" json:"exceptions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Credential) Reset() {
	*x = Credential{}
	mi := &file_receptor_v1_receptor_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Credential) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Credential) ProtoMessage() {}

func (x *Credential) ProtoReflect() protoreflect.Message {
	mi := &file_receptor_v1_receptor_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Credential.ProtoReflect.Descriptor instead.
func (*Credential) Descriptor() ([]byte, []int) {
	return file_receptor_v1_receptor_proto_rawDescGZIP(), []int{13}
}

func (x *Credential) GetReceptorObjectId() string {
	if x != nil {
		return x.ReceptorObjectId
	}
	return ""
}

func (x *Credential) GetCredential() string {
	if x != nil {
		return x.Credential
	}
	return ""
}

func (x *Credential) GetIsCredentialValid() bool {
	if x != nil {
		return x.IsCredentialValid
	}
	return false
}

func (x *Credential) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Credential) GetExceptions() string {
	if x != nil {
		return x.Exceptions
	}
	return ""
}

// ReceptorOID is Trustero's receptor record identifier.
type ReceptorOID struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Receptor_object_id is the string representation of a Trustero persistent record.
	ReceptorObjectId string `protobuf:"bytes,1,opt,name=receptor_object_id,json=receptorObjectId,proto3" json:"receptor_object_id,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ReceptorOID) Reset() {
	*x = ReceptorOID{}
	mi := &file_receptor_v1_receptor_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReceptorOID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceptorOID) ProtoMessage() {}

func (x *ReceptorOID) ProtoReflect() protoreflect.Message {
	mi := &file_receptor_v1_receptor_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceptorOID.ProtoReflect.Descriptor instead.
func (*ReceptorOID) Descriptor() ([]byte, []int) {
	return file_receptor_v1_receptor_proto_rawDescGZIP(), []int{14}
}

func (x *ReceptorOID) GetReceptorObjectId() string {
	if x != nil {
		return x.ReceptorObjectId
	}
	return ""
}

// ReceptorConfiguration contains a configurations a receptor needs to access a service provider account.
type ReceptorConfiguration struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Receptor_object_id is Trustero's receptor record identifier.
	ReceptorObjectId string `protobuf:"bytes,1,opt,name=receptor_object_id,json=receptorObjectId,proto3" json:"receptor_object_id,omitempty"`
	// Credential required to access a service provider for report finding and discover services purposes.
	Credential string `protobuf:"bytes,2,opt,name=credential,proto3" json:"credential,omitempty"`
	// Config holds additional receptor configuration to access a service provider account.
	Config string `protobuf:"bytes,3,opt,name=config,proto3" json:"config,omitempty"`
	// Service_provider_account is the service provider account name.
	ServiceProviderAccount string `protobuf:"bytes,4,opt,name=service_provider_account,json=serviceProviderAccount,proto3" json:"service_provider_account,omitempty"`
	// Model_id is the receptor model id
	ModelId       string `protobuf:"bytes,5,opt,name=model_id,json=modelId,proto3" json:"model_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReceptorConfiguration) Reset() {
	*x = ReceptorConfiguration{}
	mi := &file_receptor_v1_receptor_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReceptorConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceptorConfiguration) ProtoMessage() {}

func (x *ReceptorConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_receptor_v1_receptor_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceptorConfiguration.ProtoReflect.Descriptor instead.
func (*ReceptorConfiguration) Descriptor() ([]byte, []int) {
	return file_receptor_v1_receptor_proto_rawDescGZIP(), []int{15}
}

func (x *ReceptorConfiguration) GetReceptorObjectId() string {
	if x != nil {
		return x.ReceptorObjectId
	}
	return ""
}

func (x *ReceptorConfiguration) GetCredential() string {
	if x != nil {
		return x.Credential
	}
	return ""
}

func (x *ReceptorConfiguration) GetConfig() string {
	if x != nil {
		return x.Config
	}
	return ""
}

func (x *ReceptorConfiguration) GetServiceProviderAccount() string {
	if x != nil {
		return x.ServiceProviderAccount
	}
	return ""
}

func (x *ReceptorConfiguration) GetModelId() string {
	if x != nil {
		return x.ModelId
	}
	return ""
}

// JobResult reports the result of a receptor request.
type JobResult struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Tracer_id is used to track the progress of the receptor request.
	TracerId string `protobuf:"bytes,1,opt,name=tracer_id,json=tracerId,proto3" json:"tracer_id,omitempty"`
	// Command is the receptor request that completed.  One of "verify", "scan", or "discover"
	Command string `protobuf:"bytes,2,opt,name=command,proto3" json:"command,omitempty"`
	// Result is receptor request result.  One of "success", "fail", or "error".
	Result string `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`
	// Receptor_object_id is Trustero's receptor record identifier.
	ReceptorObjectId string `protobuf:"bytes,4,opt,name=receptor_object_id,json=receptorObjectId,proto3" json:"receptor_object_id,omitempty"`
	// Exceptions contain information about the error like permission missing for the credentials provided.
	Exceptions    string `protobuf:"bytes,5,opt,name=exceptions,proto3" json:"exceptions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JobResult) Reset() {
	*x = JobResult{}
	mi := &file_receptor_v1_receptor_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JobResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobResult) ProtoMessage() {}

func (x *JobResult) ProtoReflect() protoreflect.Message {
	mi := &file_receptor_v1_receptor_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobResult.ProtoReflect.Descriptor instead.
func (*JobResult) Descriptor() ([]byte, []int) {
	return file_receptor_v1_receptor_proto_rawDescGZIP(), []int{16}
}

func (x *JobResult) GetTracerId() string {
	if x != nil {
		return x.TracerId
	}
	return ""
}

func (x *JobResult) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

func (x *JobResult) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

func (x *JobResult) GetReceptorObjectId() string {
	if x != nil {
		return x.ReceptorObjectId
	}
	return ""
}

func (x *JobResult) GetExceptions() string {
	if x != nil {
		return x.Exceptions
	}
	return ""
}

type ReportChunk struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Content       []byte                 `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	IsBoundary    bool                   `protobuf:"varint,2,opt,name=is_boundary,json=isBoundary,proto3" json:"is_boundary,omitempty"` // Whether this chunk contains the boundary
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReportChunk) Reset() {
	*x = ReportChunk{}
	mi := &file_receptor_v1_receptor_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReportChunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportChunk) ProtoMessage() {}

func (x *ReportChunk) ProtoReflect() protoreflect.Message {
	mi := &file_receptor_v1_receptor_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportChunk.ProtoReflect.Descriptor instead.
func (*ReportChunk) Descriptor() ([]byte, []int) {
	return file_receptor_v1_receptor_proto_rawDescGZIP(), []int{17}
}

func (x *ReportChunk) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *ReportChunk) GetIsBoundary() bool {
	if x != nil {
		return x.IsBoundary
	}
	return false
}

// Server response after receiving the whole streamed report
type ReportResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"` // Could use "ok" or other status information
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReportResponse) Reset() {
	*x = ReportResponse{}
	mi := &file_receptor_v1_receptor_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportResponse) ProtoMessage() {}

func (x *ReportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_receptor_v1_receptor_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportResponse.ProtoReflect.Descriptor instead.
func (*ReportResponse) Descriptor() ([]byte, []int) {
	return file_receptor_v1_receptor_proto_rawDescGZIP(), []int{18}
}

func (x *ReportResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

var File_receptor_v1_receptor_proto protoreflect.FileDescriptor

const file_receptor_v1_receptor_proto_rawDesc = "" +
	"\n" +
	"\x1areceptor_v1/receptor.proto\x12\vreceptor_v1\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1egoogle/protobuf/wrappers.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xd5\x01\n" +
	"\aFinding\x12#\n" +
	"\rreceptor_type\x18\x01 \x01(\tR\freceptorType\x128\n" +
	"\x18service_provider_account\x18\x02 \x01(\tR\x16serviceProviderAccount\x126\n" +
	"\bentities\x18\x03 \x03(\v2\x1a.receptor_v1.ServiceEntityR\bentities\x123\n" +
	"\tevidences\x18\x04 \x03(\v2\x15.receptor_v1.EvidenceR\tevidences\"\xc2\x05\n" +
	"\bEvidence\x12\x18\n" +
	"\acaption\x18\x01 \x01(\tR\acaption\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x12!\n" +
	"\fservice_name\x18\x03 \x01(\tR\vserviceName\x12\x1f\n" +
	"\ventity_type\x18\x04 \x01(\tR\n" +
	"entityType\x12-\n" +
	"\asources\x18\x05 \x03(\v2\x13.receptor_v1.SourceR\asources\x12)\n" +
	"\x03doc\x18\x06 \x01(\v2\x15.receptor_v1.DocumentH\x00R\x03doc\x12-\n" +
	"\x06struct\x18\a \x01(\v2\x13.receptor_v1.StructH\x00R\x06struct\x12,\n" +
	"\x12service_account_id\x18\b \x01(\tR\x10serviceAccountId\x12\x1a\n" +
	"\bcontrols\x18\t \x03(\tR\bcontrols\x12\x1b\n" +
	"\tis_manual\x18\n" +
	" \x01(\bR\bisManual\x12?\n" +
	"\rrelevant_date\x18\v \x01(\v2\x1a.google.protobuf.TimestampR\frelevantDate\x12Q\n" +
	"\x14evidence_object_type\x18\f \x01(\x0e2\x1f.receptor_v1.EvidenceObjectTypeR\x12evidenceObjectType\x12!\n" +
	"\fevidence_key\x18\r \x01(\tR\vevidenceKey\x12\x1a\n" +
	"\bpolicies\x18\x0e \x03(\tR\bpolicies\x12\x1d\n" +
	"\n" +
	"record_ids\x18\x0f \x03(\tR\trecordIds\x12\x1e\n" +
	"\n" +
	"exceptions\x18\x10 \x01(\tR\n" +
	"exceptions\x12#\n" +
	"\revidence_link\x18\x11 \x01(\tR\fevidenceLinkB\x0f\n" +
	"\revidence_type\"Z\n" +
	"\x06Source\x12&\n" +
	"\x0fraw_api_request\x18\x01 \x01(\tR\rrawApiRequest\x12(\n" +
	"\x10raw_api_response\x18\x02 \x01(\tR\x0erawApiResponse\"8\n" +
	"\aSources\x12-\n" +
	"\asources\x18\x01 \x03(\v2\x13.receptor_v1.SourceR\asources\"\xba\x01\n" +
	"\bDocument\x12\x12\n" +
	"\x04mime\x18\x02 \x01(\tR\x04mime\x12\x12\n" +
	"\x04body\x18\x03 \x01(\fR\x04body\x12(\n" +
	"\x10stream_file_path\x18\x04 \x01(\tR\x0estreamFilePath\x12\x1b\n" +
	"\tfile_name\x18\x05 \x01(\tR\bfileName\x12?\n" +
	"\rlast_modified\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\flastModified\"\xed\x02\n" +
	"\x06Struct\x12$\n" +
	"\x04rows\x18\x02 \x03(\v2\x10.receptor_v1.RowR\x04rows\x12T\n" +
	"\x11col_display_names\x18\x03 \x03(\v2(.receptor_v1.Struct.ColDisplayNamesEntryR\x0fcolDisplayNames\x12*\n" +
	"\x11col_display_order\x18\x04 \x03(\tR\x0fcolDisplayOrder\x12;\n" +
	"\bcol_tags\x18\x05 \x03(\v2 .receptor_v1.Struct.ColTagsEntryR\acolTags\x1aB\n" +
	"\x14ColDisplayNamesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a:\n" +
	"\fColTagsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xb0\x01\n" +
	"\x03Row\x12,\n" +
	"\x12entity_instance_id\x18\x01 \x01(\tR\x10entityInstanceId\x12.\n" +
	"\x04cols\x18\x02 \x03(\v2\x1a.receptor_v1.Row.ColsEntryR\x04cols\x1aK\n" +
	"\tColsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12(\n" +
	"\x05value\x18\x02 \x01(\v2\x12.receptor_v1.ValueR\x05value:\x028\x01\"\x88\x04\n" +
	"\x05Value\x12#\n" +
	"\fdouble_value\x18\x01 \x01(\x01H\x00R\vdoubleValue\x12!\n" +
	"\vfloat_value\x18\x02 \x01(\x02H\x00R\n" +
	"floatValue\x12!\n" +
	"\vint32_value\x18\x03 \x01(\x05H\x00R\n" +
	"int32Value\x12!\n" +
	"\vint64_value\x18\x04 \x01(\x03H\x00R\n" +
	"int64Value\x12#\n" +
	"\fuint32_value\x18\x05 \x01(\rH\x00R\vuint32Value\x12#\n" +
	"\fuint64_value\x18\x06 \x01(\x04H\x00R\vuint64Value\x12\x1f\n" +
	"\n" +
	"bool_value\x18\a \x01(\bH\x00R\tboolValue\x12#\n" +
	"\fstring_value\x18\b \x01(\tH\x00R\vstringValue\x12E\n" +
	"\x0ftimestamp_value\x18\t \x01(\v2\x1a.google.protobuf.TimestampH\x00R\x0etimestampValue\x12E\n" +
	"\x11string_list_value\x18\n" +
	" \x01(\v2\x17.receptor_v1.StringListH\x00R\x0fstringListValue\x12E\n" +
	"\x11struct_list_value\x18\v \x01(\v2\x17.receptor_v1.StructListH\x00R\x0fstructListValueB\f\n" +
	"\n" +
	"value_type\"$\n" +
	"\n" +
	"StringList\x12\x16\n" +
	"\x06values\x18\x01 \x03(\tR\x06values\"?\n" +
	"\n" +
	"StructList\x121\n" +
	"\x06values\x18\x01 \x03(\v2\x19.receptor_v1.StructStructR\x06values\"\x9c\x01\n" +
	"\fStructStruct\x12=\n" +
	"\x06fields\x18\x01 \x03(\v2%.receptor_v1.StructStruct.FieldsEntryR\x06fields\x1aM\n" +
	"\vFieldsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12(\n" +
	"\x05value\x18\x02 \x01(\v2\x12.receptor_v1.ValueR\x05value:\x028\x01\"\xa8\x01\n" +
	"\x0fServiceEntities\x12#\n" +
	"\rreceptor_type\x18\x01 \x01(\tR\freceptorType\x128\n" +
	"\x18service_provider_account\x18\x02 \x01(\tR\x16serviceProviderAccount\x126\n" +
	"\bentities\x18\x03 \x03(\v2\x1a.receptor_v1.ServiceEntityR\bentities\"\xe1\x01\n" +
	"\rServiceEntity\x12!\n" +
	"\fservice_name\x18\x01 \x01(\tR\vserviceName\x12\x1f\n" +
	"\ventity_type\x18\x02 \x01(\tR\n" +
	"entityType\x120\n" +
	"\x14entity_instance_name\x18\x03 \x01(\tR\x12entityInstanceName\x12,\n" +
	"\x12entity_instance_id\x18\x04 \x01(\tR\x10entityInstanceId\x12,\n" +
	"\x12service_account_id\x18\x05 \x01(\tR\x10serviceAccountId\"\xc4\x01\n" +
	"\n" +
	"Credential\x12,\n" +
	"\x12receptor_object_id\x18\x01 \x01(\tR\x10receptorObjectId\x12\x1e\n" +
	"\n" +
	"credential\x18\x02 \x01(\tR\n" +
	"credential\x12.\n" +
	"\x13is_credential_valid\x18\x03 \x01(\bR\x11isCredentialValid\x12\x18\n" +
	"\amessage\x18\x04 \x01(\tR\amessage\x12\x1e\n" +
	"\n" +
	"exceptions\x18\x05 \x01(\tR\n" +
	"exceptions\";\n" +
	"\vReceptorOID\x12,\n" +
	"\x12receptor_object_id\x18\x01 \x01(\tR\x10receptorObjectId\"\xd2\x01\n" +
	"\x15ReceptorConfiguration\x12,\n" +
	"\x12receptor_object_id\x18\x01 \x01(\tR\x10receptorObjectId\x12\x1e\n" +
	"\n" +
	"credential\x18\x02 \x01(\tR\n" +
	"credential\x12\x16\n" +
	"\x06config\x18\x03 \x01(\tR\x06config\x128\n" +
	"\x18service_provider_account\x18\x04 \x01(\tR\x16serviceProviderAccount\x12\x19\n" +
	"\bmodel_id\x18\x05 \x01(\tR\amodelId\"\xa8\x01\n" +
	"\tJobResult\x12\x1b\n" +
	"\ttracer_id\x18\x01 \x01(\tR\btracerId\x12\x18\n" +
	"\acommand\x18\x02 \x01(\tR\acommand\x12\x16\n" +
	"\x06result\x18\x03 \x01(\tR\x06result\x12,\n" +
	"\x12receptor_object_id\x18\x04 \x01(\tR\x10receptorObjectId\x12\x1e\n" +
	"\n" +
	"exceptions\x18\x05 \x01(\tR\n" +
	"exceptions\"H\n" +
	"\vReportChunk\x12\x18\n" +
	"\acontent\x18\x01 \x01(\fR\acontent\x12\x1f\n" +
	"\vis_boundary\x18\x02 \x01(\bR\n" +
	"isBoundary\"(\n" +
	"\x0eReportResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status*\xeb\x02\n" +
	"\x12EvidenceObjectType\x12\r\n" +
	"\tEVIDENCES\x10\x00\x12\f\n" +
	"\bCONTROLS\x10\x01\x12\f\n" +
	"\bPOLICIES\x10\x02\x12\x13\n" +
	"\x0fPOLICY_DOCUMENT\x10\x03\x12\x1a\n" +
	"\x16CONTROL_POLICY_MAPPING\x10\x04\x12\x16\n" +
	"\x12CONTROL_PROCEDURES\x10\x05\x12%\n" +
	"!CONTROL_CONTROL_PROCEDURE_MAPPING\x10\x06\x12\x1c\n" +
	"\x18CONTROL_EVIDENCE_MAPPING\x10\a\x12\x12\n" +
	"\x0eEVIDENCES_META\x10\b\x12\"\n" +
	"\x1ePOLICY_DOCUMENT_POLICY_MAPPING\x10\t\x12\x18\n" +
	"\x14POLICY_DOCUMENT_META\x10\n" +
	"\x12&\n" +
	"\"CONTROL_PROCEDURE_EVIDENCE_MAPPING\x10\v\x12\"\n" +
	"\x1eWORKFLOW_TASK_EVIDENCE_MAPPING\x10\f2\xf4\x03\n" +
	"\bReceptor\x12;\n" +
	"\bVerified\x12\x17.receptor_v1.Credential\x1a\x16.google.protobuf.Empty\x12P\n" +
	"\x10GetConfiguration\x12\x18.receptor_v1.ReceptorOID\x1a\".receptor_v1.ReceptorConfiguration\x12H\n" +
	"\n" +
	"Discovered\x12\x1c.receptor_v1.ServiceEntities\x1a\x1c.google.protobuf.StringValue\x12<\n" +
	"\x06Report\x12\x14.receptor_v1.Finding\x1a\x1c.google.protobuf.StringValue\x128\n" +
	"\x06Notify\x12\x16.receptor_v1.JobResult\x1a\x16.google.protobuf.Empty\x12N\n" +
	"\x10SetConfiguration\x12\".receptor_v1.ReceptorConfiguration\x1a\x16.google.protobuf.Empty\x12G\n" +
	"\fStreamReport\x12\x18.receptor_v1.ReportChunk\x1a\x1b.receptor_v1.ReportResponse(\x01B(Z&github.com/trustero/api/go/receptor_v1b\x06proto3"

var (
	file_receptor_v1_receptor_proto_rawDescOnce sync.Once
	file_receptor_v1_receptor_proto_rawDescData []byte
)

func file_receptor_v1_receptor_proto_rawDescGZIP() []byte {
	file_receptor_v1_receptor_proto_rawDescOnce.Do(func() {
		file_receptor_v1_receptor_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_receptor_v1_receptor_proto_rawDesc), len(file_receptor_v1_receptor_proto_rawDesc)))
	})
	return file_receptor_v1_receptor_proto_rawDescData
}

var file_receptor_v1_receptor_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_receptor_v1_receptor_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_receptor_v1_receptor_proto_goTypes = []any{
	(EvidenceObjectType)(0),        // 0: receptor_v1.EvidenceObjectType
	(*Finding)(nil),                // 1: receptor_v1.Finding
	(*Evidence)(nil),               // 2: receptor_v1.Evidence
	(*Source)(nil),                 // 3: receptor_v1.Source
	(*Sources)(nil),                // 4: receptor_v1.Sources
	(*Document)(nil),               // 5: receptor_v1.Document
	(*Struct)(nil),                 // 6: receptor_v1.Struct
	(*Row)(nil),                    // 7: receptor_v1.Row
	(*Value)(nil),                  // 8: receptor_v1.Value
	(*StringList)(nil),             // 9: receptor_v1.StringList
	(*StructList)(nil),             // 10: receptor_v1.StructList
	(*StructStruct)(nil),           // 11: receptor_v1.StructStruct
	(*ServiceEntities)(nil),        // 12: receptor_v1.ServiceEntities
	(*ServiceEntity)(nil),          // 13: receptor_v1.ServiceEntity
	(*Credential)(nil),             // 14: receptor_v1.Credential
	(*ReceptorOID)(nil),            // 15: receptor_v1.ReceptorOID
	(*ReceptorConfiguration)(nil),  // 16: receptor_v1.ReceptorConfiguration
	(*JobResult)(nil),              // 17: receptor_v1.JobResult
	(*ReportChunk)(nil),            // 18: receptor_v1.ReportChunk
	(*ReportResponse)(nil),         // 19: receptor_v1.ReportResponse
	nil,                            // 20: receptor_v1.Struct.ColDisplayNamesEntry
	nil,                            // 21: receptor_v1.Struct.ColTagsEntry
	nil,                            // 22: receptor_v1.Row.ColsEntry
	nil,                            // 23: receptor_v1.StructStruct.FieldsEntry
	(*timestamppb.Timestamp)(nil),  // 24: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),          // 25: google.protobuf.Empty
	(*wrapperspb.StringValue)(nil), // 26: google.protobuf.StringValue
}
var file_receptor_v1_receptor_proto_depIdxs = []int32{
	13, // 0: receptor_v1.Finding.entities:type_name -> receptor_v1.ServiceEntity
	2,  // 1: receptor_v1.Finding.evidences:type_name -> receptor_v1.Evidence
	3,  // 2: receptor_v1.Evidence.sources:type_name -> receptor_v1.Source
	5,  // 3: receptor_v1.Evidence.doc:type_name -> receptor_v1.Document
	6,  // 4: receptor_v1.Evidence.struct:type_name -> receptor_v1.Struct
	24, // 5: receptor_v1.Evidence.relevant_date:type_name -> google.protobuf.Timestamp
	0,  // 6: receptor_v1.Evidence.evidence_object_type:type_name -> receptor_v1.EvidenceObjectType
	3,  // 7: receptor_v1.Sources.sources:type_name -> receptor_v1.Source
	24, // 8: receptor_v1.Document.last_modified:type_name -> google.protobuf.Timestamp
	7,  // 9: receptor_v1.Struct.rows:type_name -> receptor_v1.Row
	20, // 10: receptor_v1.Struct.col_display_names:type_name -> receptor_v1.Struct.ColDisplayNamesEntry
	21, // 11: receptor_v1.Struct.col_tags:type_name -> receptor_v1.Struct.ColTagsEntry
	22, // 12: receptor_v1.Row.cols:type_name -> receptor_v1.Row.ColsEntry
	24, // 13: receptor_v1.Value.timestamp_value:type_name -> google.protobuf.Timestamp
	9,  // 14: receptor_v1.Value.string_list_value:type_name -> receptor_v1.StringList
	10, // 15: receptor_v1.Value.struct_list_value:type_name -> receptor_v1.StructList
	11, // 16: receptor_v1.StructList.values:type_name -> receptor_v1.StructStruct
	23, // 17: receptor_v1.StructStruct.fields:type_name -> receptor_v1.StructStruct.FieldsEntry
	13, // 18: receptor_v1.ServiceEntities.entities:type_name -> receptor_v1.ServiceEntity
	8,  // 19: receptor_v1.Row.ColsEntry.value:type_name -> receptor_v1.Value
	8,  // 20: receptor_v1.StructStruct.FieldsEntry.value:type_name -> receptor_v1.Value
	14, // 21: receptor_v1.Receptor.Verified:input_type -> receptor_v1.Credential
	15, // 22: receptor_v1.Receptor.GetConfiguration:input_type -> receptor_v1.ReceptorOID
	12, // 23: receptor_v1.Receptor.Discovered:input_type -> receptor_v1.ServiceEntities
	1,  // 24: receptor_v1.Receptor.Report:input_type -> receptor_v1.Finding
	17, // 25: receptor_v1.Receptor.Notify:input_type -> receptor_v1.JobResult
	16, // 26: receptor_v1.Receptor.SetConfiguration:input_type -> receptor_v1.ReceptorConfiguration
	18, // 27: receptor_v1.Receptor.StreamReport:input_type -> receptor_v1.ReportChunk
	25, // 28: receptor_v1.Receptor.Verified:output_type -> google.protobuf.Empty
	16, // 29: receptor_v1.Receptor.GetConfiguration:output_type -> receptor_v1.ReceptorConfiguration
	26, // 30: receptor_v1.Receptor.Discovered:output_type -> google.protobuf.StringValue
	26, // 31: receptor_v1.Receptor.Report:output_type -> google.protobuf.StringValue
	25, // 32: receptor_v1.Receptor.Notify:output_type -> google.protobuf.Empty
	25, // 33: receptor_v1.Receptor.SetConfiguration:output_type -> google.protobuf.Empty
	19, // 34: receptor_v1.Receptor.StreamReport:output_type -> receptor_v1.ReportResponse
	28, // [28:35] is the sub-list for method output_type
	21, // [21:28] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_receptor_v1_receptor_proto_init() }
func file_receptor_v1_receptor_proto_init() {
	if File_receptor_v1_receptor_proto != nil {
		return
	}
	file_receptor_v1_receptor_proto_msgTypes[1].OneofWrappers = []any{
		(*Evidence_Doc)(nil),
		(*Evidence_Struct)(nil),
	}
	file_receptor_v1_receptor_proto_msgTypes[7].OneofWrappers = []any{
		(*Value_DoubleValue)(nil),
		(*Value_FloatValue)(nil),
		(*Value_Int32Value)(nil),
		(*Value_Int64Value)(nil),
		(*Value_Uint32Value)(nil),
		(*Value_Uint64Value)(nil),
		(*Value_BoolValue)(nil),
		(*Value_StringValue)(nil),
		(*Value_TimestampValue)(nil),
		(*Value_StringListValue)(nil),
		(*Value_StructListValue)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_receptor_v1_receptor_proto_rawDesc), len(file_receptor_v1_receptor_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_receptor_v1_receptor_proto_goTypes,
		DependencyIndexes: file_receptor_v1_receptor_proto_depIdxs,
		EnumInfos:         file_receptor_v1_receptor_proto_enumTypes,
		MessageInfos:      file_receptor_v1_receptor_proto_msgTypes,
	}.Build()
	File_receptor_v1_receptor_proto = out.File
	file_receptor_v1_receptor_proto_goTypes = nil
	file_receptor_v1_receptor_proto_depIdxs = nil
}
